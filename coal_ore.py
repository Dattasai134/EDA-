# -*- coding: utf-8 -*-
"""Coal_ore.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14jwSv2dHCYmLupZglkouJQ3GeRvSo0dz
"""

import pandas as pd

df = pd.read_csv('Coal_ore.csv')
df

# prompt: Using dataframe df: find nan values

df.isnull().sum()

del df['CODE']

df

df['Mean'] = df.groupby('Entity')['Coal_Prices'].transform('mean')
df['Median'] = df.groupby('Entity')['Coal_Prices'].transform('median')
df['Mode'] = df.groupby('Entity')['Coal_Prices'].transform(lambda x: x.mode()[0])

df

# @title Year vs Coal_Prices

from matplotlib import pyplot as plt
import seaborn as sns
def _plot_series(series, series_name, series_index=0):
  palette = list(sns.palettes.mpl_palette('Dark2'))
  xs = series['Year']
  ys = series['Coal_Prices']

  plt.plot(xs, ys, label=series_name, color=palette[series_index % len(palette)])

fig, ax = plt.subplots(figsize=(10, 5.2), layout='constrained')
df_sorted = df.sort_values('Year', ascending=True)
for i, (series_name, series) in enumerate(df_sorted.groupby('Entity')):
  _plot_series(series, series_name, i)
  fig.legend(title='Entity', bbox_to_anchor=(1, 1), loc='upper left')
sns.despine(fig=fig, ax=ax)
plt.xlabel('Year')
_ = plt.ylabel('Coal_Prices')

df['Minimum'] = df.groupby('Entity')['Coal_Prices'].transform('min')
df['Maximum'] = df.groupby('Entity')['Coal_Prices'].transform('max')
df['Average'] = df.groupby('Entity')['Coal_Prices'].transform('mean')

df

# prompt: find outliers for each columns coal_prices and average also give each plot for them

import matplotlib.pyplot as plt
import numpy as np

# Coal_Prices
Q1 = df['Coal_Prices'].quantile(0.25)
Q3 = df['Coal_Prices'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = df[((df['Coal_Prices'] < lower_bound) | (df['Coal_Prices'] > upper_bound))]

# Average
Q1 = df['Average'].quantile(0.25)
Q3 = df['Average'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = df[((df['Average'] < lower_bound) | (df['Average'] > upper_bound))]

# Plots
plt.figure(figsize=(10, 5))
sns.boxplot(x=df['Coal_Prices'])
plt.title('Coal_Prices Outliers')
plt.show()

plt.figure(figsize=(10, 5))
sns.boxplot(x=df['Average'])
plt.title('Average Outliers')
plt.show()

# prompt: now show me outliers

import matplotlib.pyplot as plt
# Coal_Prices
Q1 = df['Coal_Prices'].quantile(0.25)
Q3 = df['Coal_Prices'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = df[((df['Coal_Prices'] < lower_bound) | (df['Coal_Prices'] > upper_bound))]

# Average
Q1 = df['Average'].quantile(0.25)
Q3 = df['Average'].quantile(0.75)
IQR = Q3 - Q1

lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

outliers = df[((df['Average'] < lower_bound) | (df['Average'] > upper_bound))]

# Plots
plt.figure(figsize=(10, 5))
sns.boxplot(x=df['Coal_Prices'])
plt.title('Coal_Prices Outliers')
plt.show()

plt.figure(figsize=(10, 5))
sns.boxplot(x=df['Average'])
plt.title('Average Outliers')
plt.show()

df

df.shape

df.duplicated().sum()